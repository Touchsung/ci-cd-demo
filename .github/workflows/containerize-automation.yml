name: Containerize Automation
on:
  push:
    branches:
      - dev
env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/simple-node-app
jobs:
  push_to_registry:
    name: Push Docker image to Docker Registry
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAME }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.IMAGE_NAME }}:${{ github.sha}}
  deploy_to_k8s:
    name: Deploy to K8S
    runs-on: ubuntu-latest
    needs: push_to_registry
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Connect K8S Cluster
        run: ${{ secrets.KUBE_CONFIG }}
      - name: Modify Mannifest
        run: |
          export NAME_WITH_TAG=${{ env.IMAGE_NAME }}:${{ github.sha }}
          yq -i '.spec.template.spec.containers[0].image=strenv(NAME_WITH_TAG)' ./manifest/dev/deployment.yaml
      - name: Deploy to Cluster
        run: kubectl apply -f ./manifest/dev/.
